{"version":3,"sources":["assets/images/error.png","assets/StyledComponents/Error.jsx","Pages/Error.jsx"],"names":["module","exports","ErrorContainer","styled","div","ErrorText","p","ErrorImg","img","connect","dispatch","resolve_error","ACTION_RESOLVE_ERROR","t","useTranslation","useEffect","src","ErrorImage","width"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,mC,2bCUpC,IAAMC,EAAiBC,IAAOC,IAAV,KAMdC,EAAYF,IAAOG,EAAV,KAETC,EAAWJ,IAAOK,IAAV,KCiCNC,sBAAQ,MAJI,SAAAC,GAAQ,MAAK,CACpCC,cAAe,kBAAMD,EAASE,mBAGnBH,EArBf,YAAiC,IAAjBE,EAAgB,EAAhBA,cAEJE,EAAMC,YAAe,IAArBD,EAOR,OAJAE,qBAAU,WACNJ,MACF,CAACA,IAGC,kBAACT,EAAD,KACI,kBAACG,EAAD,KAAYQ,EAAE,gBAAgB,6BAA9B,IAAoC,kBAACN,EAAD,CAAUS,IAAKC,IAAYC,MAAO","file":"static/js/7.36dbc9d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.3bb5430b.png\";","\r\n//#region Imports\r\n\r\n// Import react styled components\r\nimport styled from 'styled-components';\r\n\r\n//#endregion \r\n\r\n//#region Exported Styled Components\r\n\r\nexport const ErrorContainer = styled.div`\r\n    font-size: 40px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\nexport const ErrorText = styled.p``\r\n\r\nexport const ErrorImg = styled.img`\r\n    margin-top: 10%;\r\n`\r\n\r\n//#endregion ","//#region Imports\r\n\r\n// Import react components\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// Import redux action\r\nimport { ACTION_RESOLVE_ERROR } from '../Store/actions/Action'\r\n\r\n// Import multilanguage component\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// Import error image\r\nimport ErrorImage from '../assets/images/error.png'\r\n\r\n// Import custom styled components\r\nimport { ErrorContainer, ErrorImg, ErrorText} from '../assets/StyledComponents/Error'\r\n\r\n//#endregion\r\n\r\n/**\r\n * Error function\r\n *  \r\n * This function renders a paging component to be used by most movie grids\r\n * \r\n * @name Error\r\n * @function\r\n * @param {Dispatch} resolve_error The dispatch action to set the render state to true and resolve the error\r\n * @returns {StyledComponent} A styled component to render the error screen\r\n */\r\nfunction Error({resolve_error}) {\r\n    // Get the translation component to be used to switch between different languages\r\n    const { t } = useTranslation(\"\");\r\n\r\n    // On loading the page remove the error state so the user can navigate away and continue browsing the site\r\n    useEffect(() => {\r\n        resolve_error();\r\n    },[resolve_error]);\r\n\r\n    return (\r\n        <ErrorContainer>\r\n            <ErrorText>{t(\"common:error\")}<br/> <ErrorImg src={ErrorImage} width={500}/></ErrorText>\r\n        </ErrorContainer>\r\n    );\r\n}\r\n\r\n// actions to be retrieved from the reducers\r\nconst mapDispatchToProps = dispatch => ({\r\n    resolve_error: () => dispatch(ACTION_RESOLVE_ERROR()),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Error);\r\n  "],"sourceRoot":""}